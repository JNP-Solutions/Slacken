//Slacken workflow for Seqslab (work in progress)


version 1.0

task Slacken {
   input {
     File readsR1
     File readsR2
     String indexLocation
     String sampleRegex
     Float confidence
     Boolean withUnclassified
     Int minHitGroups
  }
  command <<<
    import com.jnpersson.slacken._

    //multi-sample classification generating reports only (no per-read output)

    val slacken = new SlackenSeqslab(indexLocation, detailed = false, sampleRegex, confidence,
      minHitGroups, withUnclassified)
    val outputDF = slacken.classifyReads(readsR1, Some(readsR2))
   >>>
  output {
     File outputDF = "outputDir"
   }
}

workflow RunSlacken {
  input {
     File readsR1
     File readsR2
     String indexLocation
     String sampleRegex
     Float confidence
     Boolean withUnclassified
     Int minHitGroups
  }

  call Slacken {
     input:
       readsR1 = readsR1,
       readsR2 = readsR2,
       indexLocation = indexLocation,
       sampleRegex = sampleRegex,
       confidence = confidence,
       withUnclassified = withUnclassified,
       minHitGroups = minHitGroups
  }
}