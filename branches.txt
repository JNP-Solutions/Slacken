Existing branches

hash - experimented with an open addressing linear probing hash table instead of radix sort

sort3 - experimented with having radix sort fall back to a custom quicksort rather than selection sort

sort4 - experimented with a limited radix sort that groups rather than sorts

=====

Notes on old/deleted branches and what was learned

pregroup2 - pre-grouped and pre-sorted supermers to help highly skewed buckets. Was slow.

aggregator - experimental UDAF aggregator for ReducibleBucket. This was done again, but probably better, in the "skew" branch

reducer2_skew - combination of reducer2 and skew, was not substantially faster than skew by itself

multimotif - combination of multiple short minimizers instead of a single long minimizer. Didn't have much value for my purposes at the time.

bloom - bloom filters for edge detection in de bruijn graph compaction (now an abandoned project)

skew - subdivide large buckets based on sampled size, then re-joining them later. Added complexity and wasn't worth it.

kmerAlias - alias Kmer for Array[Long]. Triggers a bug in certain spark versions, so better to avoid for now. 

sampling - sampling supermer instead of minimizer frequency for balancing, as a heuristic to determine count method. Might be better to redo from scratch if needed

intMinimizer - storing minimizers as integers instead of strings in the byPriority array. Not very helpful in the end.

apiCleanup - an attempt at designing a clean minimal API - probably best to restart from scratch if needed

toolchest - delivery of kraken2 clone to toolchest, but the project is dead

sort2 - custom version of quicksort to improve radix sort (now I think this is not the right way, better to use a hash table with linear probing)

lzo - tried to use hadoop-lzo for  bzip2 files but didn't need this at the time

optIndex - tried to optimize the intersection operation by traversing two kmertables instead of appending them
